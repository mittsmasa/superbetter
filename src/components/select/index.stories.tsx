import type { Meta, StoryObj } from '@storybook/nextjs';
import { Select } from '.';

const sampleOptions = [
  { value: 'apple', label: 'üçé Apple' },
  { value: 'banana', label: 'üçå Banana' },
  { value: 'orange', label: 'üçä Orange' },
  { value: 'grape', label: 'üçá Grape' },
  { value: 'strawberry', label: 'üçì Strawberry' },
  { value: 'disabled', label: '‚ùå Disabled Option', disabled: true },
];

const meta = {
  component: Select.Root,
  args: {
    options: sampleOptions,
  },
  render: (args) => (
    <Select.Root {...args}>
      <Select.Trigger label="„Éï„É´„Éº„ÉÑ„ÇíÈÅ∏Êäû" placeholder="ÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ" />
      <Select.Content>
        {args.options.map((option) => (
          <Select.Item
            key={option.value}
            value={option.value}
            disabled={option.disabled}
          >
            {option.label}
          </Select.Item>
        ))}
      </Select.Content>
    </Select.Root>
  ),
} satisfies Meta<typeof Select.Root>;

export default meta;

type Story = StoryObj<typeof meta>;

export const Default = {} satisfies Story;

export const WithDefaultValue = {
  args: {
    defaultValue: 'banana',
  },
} satisfies Story;

export const WithoutLabel = {
  render: (args) => (
    <Select.Root {...args}>
      <Select.Trigger placeholder="„É©„Éô„É´„Å™„Åó" />
      <Select.Content>
        {args.options.map((option) => (
          <Select.Item
            key={option.value}
            value={option.value}
            disabled={option.disabled}
          >
            {option.label}
          </Select.Item>
        ))}
      </Select.Content>
    </Select.Root>
  ),
} satisfies Story;

export const ManyOptions = {
  args: {
    options: [
      ...sampleOptions,
      { value: 'kiwi', label: 'ü•ù Kiwi' },
      { value: 'mango', label: 'ü•≠ Mango' },
      { value: 'pineapple', label: 'üçç Pineapple' },
      { value: 'coconut', label: 'ü•• Coconut' },
      { value: 'avocado', label: 'ü•ë Avocado' },
      { value: 'tomato', label: 'üçÖ Tomato' },
      { value: 'eggplant', label: 'üçÜ Eggplant' },
      { value: 'carrot', label: 'ü•ï Carrot' },
      { value: 'corn', label: 'üåΩ Corn' },
      { value: 'broccoli', label: 'ü•¶ Broccoli' },
    ],
  },
} satisfies Story;

export const WithOnValueChange = {
  args: {
    onValueChange: (value: string) => {
      console.log('Selected value:', value);
      alert(`ÈÅ∏Êäû„Åï„Çå„Åæ„Åó„Åü: ${value}`);
    },
  },
} satisfies Story;
